version: '3.8'

services:
  mysql:
    image: mysql:latest
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: sales_db
      MYSQL_USER: thangquang
      MYSQL_PASSWORD: thangquang
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    restart: always
    networks:
      - thangquang

  postgres:
    image: postgres:14
    container_name: postgres_container
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=thangquang
      - POSTGRES_PASSWORD=thangquang
      - POSTGRES_DB=sales_db
    volumes:
      - ./postgres-init:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - thangquang

  postgres_airflow:
    image: postgres:14
    container_name: postgres_airflow_container
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow_db
    volumes:
      - postgres_airflow_data:/var/lib/postgresql/data
    networks:
      - thangquang

  webserver:
    image: apache/airflow:2.6.0-python3.10
    container_name: webserver_container
    entrypoint: ['/opt/airflow/script/entrypoint.sh']
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres_airflow_container/airflow_db
    ports:
      - "8080:8080"
    depends_on:
      - postgres_airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./script/entrypoint.sh:/opt/airflow/script/entrypoint.sh
      - ./requirements.txt:/opt/airflow/requirements.txt
    healthcheck:
      test: ['CMD-SHELL', "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 2m
      timeout: 4m
      retries: 3
    networks:
      - thangquang

  scheduler:
    image: apache/airflow:2.6.0-python3.10
    container_name: scheduler_container
    depends_on:
      webserver:
        condition: service_healthy
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/opt/airflow/requirements.txt
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres_airflow_container/airflow_db
    command: bash -c "pip install -r ./requirements.txt && airflow db upgrade && airflow scheduler"
    networks:
      - thangquang

volumes:
  mysql_data:
  postgres_data:
  postgres_airflow_data:

networks:
  thangquang:
